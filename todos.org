#+title: compile-mode.nvim TODOs
#+author: EJ Shafran

* DONE Add goto error message outputs
  CLOSED: [2023-10-29 Sun 01:30]

* DONE Place previous command in vim.o or vim.g
  CLOSED: [2023-10-29 Sun 01:36]

* DONE Support split modifier
  CLOSED: [2023-10-29 Sun 01:42]

* DONE Configure compilation buffer name
  CLOSED: [2023-10-29 Sun 01:48]

* DONE Configure highlight colors
  CLOSED: [2023-11-04 Sat 19:40]

* DONE Configure highlight of text that starts with `:`
  CLOSED: [2023-11-04 Sat 19:43]

* DONE Goto error - patterns for different compilation types
  CLOSED: [2023-11-03 Fri 21:08]

* DONE Goto error - go to a certain line and column
  CLOSED: [2023-11-03 Fri 21:08]

* DONE Goto error - next error and previous error
  CLOSED: [2023-11-04 Sat 19:40]

* DONE Goto error - customize patterns
  CLOSED: [2023-11-13 Mon 21:56]

* DONE Goto error - use less ugly colors
  CLOSED: [2023-11-03 Fri 23:16]

* DONE Refactoring - use plenary async for vim.schedule
  CLOSED: [2023-10-29 Sun 01:49]

* DONE Refactoring - extract keymap handler for <CR>
  CLOSED: [2023-10-29 Sun 01:49]

* DONE Add highlights for lines starting with `Text:`
  CLOSED: [2023-10-17 Tue 03:13]

* DONE Update README/docs
  CLOSED: [2023-11-13 Mon 22:47]

** DONE Add `Compilation Buffer` section
   CLOSED: [2023-11-13 Mon 22:47]

** DONE Add `Goto Error` section
   CLOSED: [2023-11-13 Mon 22:47]

* DONE Organize code
  CLOSED: [2023-11-04 Sat 19:40]

* DONE Add tests, at some point
  CLOSED: [2023-11-13 Mon 21:56]

* DONE Add compilation-hidden-output
  CLOSED: [2023-11-13 Mon 22:15]

* DONE Add CurrentError command
  CLOSED: [2024-05-21 Tue 23:50]

* DONE Add QuickfixErrors command
  CLOSED: [2024-05-22 Wed 17:11]

* DONE Add CompilationNext{Error,File} and CompilationPrev{Error,File}
  CLOSED: [2024-06-16 Sun 05:16]

* DONE Add auto-jump to first error option
  CLOSED: [2024-06-16 Sun 10:03]

* DONE Refactor =get_error_line=-based functions
  CLOSED: [2024-06-16 Sun 05:33]

* DONE Remove Baleia support
  CLOSED: [2024-06-16 Sun 09:34]

* DONE Implement all of the additional highlights
  CLOSED: [2024-06-16 Sun 09:34]

  #+begin_src elisp
  (defvar compilation-mode-font-lock-keywords
   '(;; configure output lines.
     ("^[Cc]hecking \\(?:[Ff]or \\|[Ii]f \\|[Ww]hether \\(?:to \\)?\\)?\\(.+\\)\\.\\.\\. *\\(?:(cached) *\\)?\\(\\(yes\\(?: .+\\)?\\)\\|no\\|\\(.*\\)\\)$"
      (1 font-lock-variable-name-face)
      (2 (compilation-face '(4 . 3))))
     ;; Command output lines.  Recognize `make[n]:' lines too.
     ("^\\([[:alnum:]_/.+-]+\\)\\(\\[\\([0-9]+\\)\\]\\)?[ \t]*:"
      (1 font-lock-function-name-face) (3 compilation-line-face nil t))
     (" --?o\\(?:utfile\\|utput\\)?[= ]\\(\\S +\\)" . 1)
     ("^Compilation \\(finished\\).*"
      (0 '(face nil compilation-message nil help-echo nil mouse-face nil) t)
      (1 compilation-info-face))
     ("^Compilation \\(exited abnormally\\|interrupt\\|killed\\|terminated\\|segmentation fault\\)\\(?:.*with code \\([0-9]+\\)\\)?.*"
      (0 '(face nil compilation-message nil help-echo nil mouse-face nil) t)
      (1 compilation-error-face)
      (2 compilation-error-face nil t)))
   "Additional things to highlight in Compilation mode.
This gets tacked on the end of the generated expressions.")
  #+end_src

* DONE Add ask about save before compiling
  CLOSED: [2024-06-18 Tue 00:38]

* DONE Add checks for segfault or termination
  CLOSED: [2024-06-19 Wed 02:01]

* DONE Add compilation environment
  CLOSED: [2024-06-19 Wed 02:12]

* DONE Parse entering/leaving directory messages
  CLOSED: [2024-07-07 Sun 00:48]

** DONE Use for highlighting
   CLOSED: [2024-06-20 Thu 22:29]

** DONE Use for determining relative paths
   CLOSED: [2024-07-07 Sun 00:48]

* DONE Add ask-to-interrupt
  CLOSED: [2024-06-22 Sat 17:31]

* DONE Allow skipping/jumping forward several errors
  CLOSED: [2024-06-22 Sat 19:03]

* DONE Move logic to compilation ftplugin
  CLOSED: [2024-06-21 Fri 19:55]

* DONE Add documentation for highlights
  CLOSED: [2024-06-22 Sat 18:08]

* DONE Support :tab
  CLOSED: [2024-06-22 Sat 17:47]

* DONE Make `ask_to_interrupt` and `ask_about_save` the default
  CLOSED: [2024-06-22 Sat 18:10]

* DONE Rename `compilation_hidden_output` option
  CLOSED: [2024-06-22 Sat 18:16]

* DONE Add lots of new tests
  CLOSED: [2024-07-06 Sat 20:02]

* DONE Document behavior of :Compile!
  CLOSED: [2024-07-01 Mon 00:19]

* DONE Re-add optional Baleia support
  CLOSED: [2024-07-01 Mon 00:57]

* DONE Add Next Error Follow
  CLOSED: [2024-08-23 Fri 02:07]
  Mode that "preview" the locus of errors in a split next to the compilation window.

* DONE Add diagnostic windows
  CLOSED: [2024-08-23 Fri 12:26]
  As configuration option, probably...

* DONE Refactor configuration logic
  CLOSED: [2024-07-08 Mon 14:00]

  Read more [[https://github.com/nvim-neorocks/nvim-best-practices?tab=readme-ov-file#wrench-configuration][here]].

** DONE Use `vim.g` variable
   CLOSED: [2024-07-08 Mon 14:00]

** DONE Use internal config type VS. opts type
   CLOSED: [2024-07-08 Mon 14:00]

** DONE Add validation
   CLOSED: [2024-07-08 Mon 14:00]

* TODO Use `busted` for tests instead of `pleanry.nvim`

* TODO Publish to LuaRocks

* DONE Add general health checks
  CLOSED: [2024-07-08 Mon 21:45]

* DONE Refactor debug logic
  CLOSED: [2024-08-15 Thu 01:29]

  Don't use `print`; do something neater and cleaner.

* DONE Add typecheck action
  CLOSED: [2024-08-18 Sun 00:50]

* DONE Fix issue with bufnr on Windows
  CLOSED: [2024-08-17 Sat 16:07]

* DONE Fix `hidden_output` warning
  CLOSED: [2024-08-17 Sat 16:07]

* DONE Fix environment variable tests on Windows
  CLOSED: [2024-08-17 Sat 17:22]

* DONE Add custom completion that uses Vim's `:!` completion
  CLOSED: [2024-08-18 Sun 00:49]

* TODO Fix issues with tab splitting

* DONE Switch away from compilation window like in Emacs mode
  CLOSED: [2024-08-23 Fri 12:47]

* DONE Add `NextError` and `PrevError` error threshold
  CLOSED: [2024-08-23 Fri 12:47]

* DONE Move all logic to filetype logic
  CLOSED: [2024-08-23 Fri 16:41]
  Such that we enable editing a file with the =compilation= filetype and having the same functionality as the rest of compile-mode.

* DONE Add `FirstError` command
  CLOSED: [2024-08-25 Sun 21:36]

** DONE Jump to first error
   CLOSED: [2024-08-25 Sun 21:36]

** DONE Jump to `count`th error
   CLOSED: [2024-08-25 Sun 21:36]

* TODO Allow dynamic changing of `vim.g.compile_mode` between compilations

* TODO Refactor error-related API to use one main function

* TODO Make some logs trace-level

* TODO Add ability to customize entering-leaving regex

